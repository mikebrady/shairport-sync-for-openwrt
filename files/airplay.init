#!/bin/sh /etc/rc.common

NAME=airplay
START=99

#shairport is always daemonized here

handle_airplay() {
        local config="$1"
        local custom="$2"
        local name
        local port
        local latency
        local daemonize
        local device
        local devicetype
        local volumecontrolname
        local beforeaction
        local afteraction
        config_get name "$1" name ""
        config_get port "$1" port ""
        config_get latency "$1" latency ""
        config_get device "$1" device ""
        config_get devicetype "$1" devicetype ""
        config_get volumecontrolname "$1" volumecontrolname ""
        config_get beforeaction "$1" beforeaction ""
        config_get afteraction "$1" afteraction ""

        # all this assumes that the only syntactically awkward parameter is the name, so we treat it differently
        arglist=""
        [ -z "$port" ] || arglist="$arglist -p $port"
        [ -z "$latency" ] || arglist="$arglist -L $latency"

        # assuming beforeaction and afteraction are single-word commands, with no arguments, etc.
        [ -z "$beforeaction" ] || arglist="$arglist -B $beforeaction"
        [ -z "$afteraction" ] || arglist="$arglist -E $afteraction"

        belist=""
        [ -z "$device" ] || belist="$belist -d $device"
        [ -z "$devicetype" ] || belist="$belist -t $devicetype"
        [ -z "$volumecontrolname" ] || belist="$belist -c $volumecontrolname"
        [ -z "$belist" ] || belist=" --$belist"

        #echo "Arguments: arglist: \"$arglist\", belist: \"$belist\""

        if [ "x$name" = "x" ] ; then
                shairport -d $arglist $belist
        else
                shairport -d -a "$name" $arglist $belist
        fi
}

start() {
        config_load airplay

#hmm -- only one copy of shairplay can be running.
#so this is not quite right...
        config_foreach handle_airplay airplay
}

stop() {
        shairport -k
}
